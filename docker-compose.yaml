version: "3.8"

services:
  pgcurriculo:
    image: postgres:17.0
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    container_name: pgcurriculo
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    restart: unless-stopped 
  
  curriculo_api:
    build:
      dockerfile: ./docker/curriculo.dockerfile
      context: .
    container_name: curriculo_api
    command: >
      sh -c "python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      gunicorn curriculo.wsgi:application --bind 0.0.0.0:8000 --workers=3"
    ports:
      - "${DJANGO_PORT}:${DJANGO_PORT}"
    depends_on:
      - pgcurriculo
      - miniocurriculo
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - .:/usr/src/app

  # cloudflared-tunnel:
  #   image: cloudflare/cloudflared:latest
  #   container_name: cloudflared-tunnel
  #   restart: unless-stopped
  #   volumes:
  #     # Monta o diret√≥rio de credenciais dentro do container
  #     - ./.cloudflared:/home/nonroot/.cloudflared
  #   command: tunnel --no-autoupdate run curriculo-prod

  miniocurriculo:
    image: minio/minio:RELEASE.2024-10-13T13-34-11Z.fips
    container_name: miniocurriculo
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER} 
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD} 
    command: server /data --console-address ":9001"
    ports:
      - "${MINIO_API_PORT}:${MINIO_API_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    volumes:
      - miniocurriculo:/data 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${MINIO_BASE_URL}:${MINIO_API_PORT}/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
  

volumes:
  pgdata:
  miniocurriculo:
